<generatedTop>
  <k>
    IF_NONE .AnnotationList { FAIL .AnnotationList } { } ~> PACK .AnnotationList ~> #Push ( #Packed ( #Key ( "edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav" ) ) ) ~> ASSERT_CMPEQ .AnnotationList ; DUP .AnnotationList ; CAR .AnnotationList ; DIP .AnnotationList { UNPAIR .AnnotationList ; } ; PACK .AnnotationList ; DIP .AnnotationList { PACK .AnnotationList ; UNPACK .AnnotationList unit .AnnotationList ; ASSERT_SOME .AnnotationList ; PACK .AnnotationList ; } ; ASSERT_CMPEQ .AnnotationList ; DUP .AnnotationList ; CAR .AnnotationList ; DIP .AnnotationList { UNPAIR .AnnotationList ; } ; PACK .AnnotationList ; DIP .AnnotationList { PACK .AnnotationList ; UNPACK .AnnotationList signature .AnnotationList ; ASSERT_SOME .AnnotationList ; PACK .AnnotationList ; } ; ASSERT_CMPEQ .AnnotationList ; DUP .AnnotationList ; CAR .AnnotationList ; DIP .AnnotationList { UNPAIR .AnnotationList ; } ; PACK .AnnotationList ; DIP .AnnotationList { PACK .AnnotationList ; UNPACK .AnnotationList option .AnnotationList signature .AnnotationList ; ASSERT_SOME .AnnotationList ; PACK .AnnotationList ; } ; ASSERT_CMPEQ .AnnotationList ; DUP .AnnotationList ; CAR .AnnotationList ; DIP .AnnotationList { UNPAIR .AnnotationList ; } ; PACK .AnnotationList ; DIP .AnnotationList { PACK .AnnotationList ; UNPACK .AnnotationList list .AnnotationList unit .AnnotationList ; ASSERT_SOME .AnnotationList ; PACK .AnnotationList ; } ; ASSERT_CMPEQ .AnnotationList ; DUP .AnnotationList ; CAR .AnnotationList ; DIP .AnnotationList { UNPAIR .AnnotationList ; } ; PACK .AnnotationList ; DIP .AnnotationList { PACK .AnnotationList ; UNPACK .AnnotationList set .AnnotationList bool .AnnotationList ; ASSERT_SOME .AnnotationList ; PACK .AnnotationList ; } ; ASSERT_CMPEQ .AnnotationList ; DUP .AnnotationList ; CAR .AnnotationList ; DIP .AnnotationList { UNPAIR .AnnotationList ; } ; PACK .AnnotationList ; DIP .AnnotationList { PACK .AnnotationList ; UNPACK .AnnotationList pair .AnnotationList int .AnnotationList int .AnnotationList ; ASSERT_SOME .AnnotationList ; PACK .AnnotationList ; } ; ASSERT_CMPEQ .AnnotationList ; DUP .AnnotationList ; CAR .AnnotationList ; DIP .AnnotationList { UNPAIR .AnnotationList ; } ; PACK .AnnotationList ; DIP .AnnotationList { PACK .AnnotationList ; UNPACK .AnnotationList or .AnnotationList key_hash .AnnotationList timestamp .AnnotationList ; ASSERT_SOME .AnnotationList ; PACK .AnnotationList ; } ; ASSERT_CMPEQ .AnnotationList ; DUP .AnnotationList ; CAR .AnnotationList ; DIP .AnnotationList { UNPAIR .AnnotationList ; } ; PACK .AnnotationList ; DIP .AnnotationList { PACK .AnnotationList ; UNPACK .AnnotationList map .AnnotationList int .AnnotationList string .AnnotationList ; ASSERT_SOME .AnnotationList ; PACK .AnnotationList ; } ; ASSERT_CMPEQ .AnnotationList ; DUP .AnnotationList ; PACK .AnnotationList ; DIP .AnnotationList { PACK .AnnotationList ; UNPACK .AnnotationList lambda .AnnotationList string .AnnotationList bytes .AnnotationList ; ASSERT_SOME .AnnotationList ; PACK .AnnotationList ; } ; ASSERT_CMPEQ .AnnotationList ; UNIT .AnnotationList ; NIL .AnnotationList operation .AnnotationList ; PAIR .AnnotationList ~> #TransformExpected ( Unit )
  </k>
  <stack>
    #Key ( "edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav" ) ~> Pair Unit Pair #Signature ( "edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7" ) Pair None Pair .List Pair .Set Pair Pair 40 -10 Pair Right #Timestamp ( 1568018133 ) Pair #Map ( .Map , int .AnnotationList , string .AnnotationList ) #Lambda ( string .AnnotationList , bytes .AnnotationList , { DUP .AnnotationList ; DROP .AnnotationList ; PACK .AnnotationList } )
  </stack>
  <paramtype>
    pair .AnnotationList key .AnnotationList pair .AnnotationList unit .AnnotationList pair .AnnotationList signature .AnnotationList pair .AnnotationList option .AnnotationList signature .AnnotationList pair .AnnotationList list .AnnotationList unit .AnnotationList pair .AnnotationList set .AnnotationList bool .AnnotationList pair .AnnotationList pair .AnnotationList int .AnnotationList int .AnnotationList pair .AnnotationList or .AnnotationList key_hash .AnnotationList timestamp .AnnotationList pair .AnnotationList map .AnnotationList int .AnnotationList string .AnnotationList lambda .AnnotationList string .AnnotationList bytes .AnnotationList
  </paramtype>
  <storagetype>
    unit .AnnotationList
  </storagetype>
  <balance>
    #Mutez ( 0 )
  </balance>
  <amount>
    #Mutez ( 0 )
  </amount>
  <now>
    #Timestamp ( -1 )
  </now>
  <myaddr>
    #Address ( "InvalidMyAddr" )
  </myaddr>
  <knownaddrs>
    .Map
  </knownaddrs>
  <sourceaddr>
    #Address ( "InvalidSourceAddr" )
  </sourceaddr>
  <senderaddr>
    #Address ( "InvalidSenderAddr" )
  </senderaddr>
  <chainid>
    #ChainId ( 0 )
  </chainid>
</generatedTop>
