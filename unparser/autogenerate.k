  rule #doUnparse({list AList T }, false) => "list" +String #doUnparse(AList, false)
  rule #doUnparse({set AList T }, false) => "set" +String #doUnparse(AList, false)
  rule #doUnparse({contract AList T }, false) => "contract" +String #doUnparse(AList, false)
  rule #doUnparse({or AList T1 T2 }, false) => "or" +String #doUnparse(AList, false)
  rule #doUnparse({lambda AList T1 T2 }, false) => "lambda" +String #doUnparse(AList, false)
  rule #doUnparse({map AList T1 T2 }, false) => "map" +String #doUnparse(AList, false)
  rule #doUnparse({big_map AList T1 T2 }, false) => "big_map" +String #doUnparse(AList, false)
  rule #doUnparse({DROP AList}, false) => "DROP" +String #doUnparse(AList, false)
  rule #doUnparse({DROP AList I}, false) => "DROP" +String #doUnparse(AList, false)
  rule #doUnparse({DIG AList I}, false) => "DIG" +String #doUnparse(AList, false)
  rule #doUnparse({DUG AList I}, false) => "DUG" +String #doUnparse(AList, false)
  rule #doUnparse({DUP AList }, false) => "DUP" +String #doUnparse(AList, false)
  rule #doUnparse({SWAP AList }, false) => "SWAP" +String #doUnparse(AList, false)
  rule #doUnparse({PUSH AList T D }, false) => "PUSH" +String #doUnparse(AList, false)
  rule #doUnparse({SOME AList }, false) => "SOME" +String #doUnparse(AList, false)
  rule #doUnparse({NONE AList T}, false) => "NONE" +String #doUnparse(AList, false)
  rule #doUnparse({UNIT AList }, false) => "UNIT" +String #doUnparse(AList, false)
  rule #doUnparse({IF_NONE AList B1 B2}, false) => "IF_NONE" +String #doUnparse(AList, false)
  rule #doUnparse({PAIR AList}, false) => "PAIR" +String #doUnparse(AList, false)
  rule #doUnparse({UNPAIR AList}, false) => "UNPAIR" +String #doUnparse(AList, false)
  rule #doUnparse({CAR AList }, false) => "CAR" +String #doUnparse(AList, false)
  rule #doUnparse({CDR AList }, false) => "CDR" +String #doUnparse(AList, false)
  rule #doUnparse({LEFT AList T}, false) => "LEFT" +String #doUnparse(AList, false)
  rule #doUnparse({RIGHT AList T}, false) => "RIGHT" +String #doUnparse(AList, false)
  rule #doUnparse({IF_LEFT AList B1 B2}, false) => "IF_LEFT" +String #doUnparse(AList, false)
  rule #doUnparse({IF_RIGHT AList B1 B2}, false) => "IF_RIGHT" +String #doUnparse(AList, false)
  rule #doUnparse({NIL AList T}, false) => "NIL" +String #doUnparse(AList, false)
  rule #doUnparse({CONS AList }, false) => "CONS" +String #doUnparse(AList, false)
  rule #doUnparse({IF_CONS AList B1 B2}, false) => "IF_CONS" +String #doUnparse(AList, false)
  rule #doUnparse({SIZE AList }, false) => "SIZE" +String #doUnparse(AList, false)
  rule #doUnparse({EMPTY_SET AList T}, false) => "EMPTY_SET" +String #doUnparse(AList, false)
  rule #doUnparse({EMPTY_MAP AList T1 T2}, false) => "EMPTY_MAP" +String #doUnparse(AList, false)
  rule #doUnparse({EMPTY_BIG_MAP AList T1 T2}, false) => "EMPTY_BIG_MAP" +String #doUnparse(AList, false)
  rule #doUnparse({MAP AList B}, false) => "MAP" +String #doUnparse(AList, false)
  rule #doUnparse({ITER AList B}, false) => "ITER" +String #doUnparse(AList, false)
  rule #doUnparse({MEM AList }, false) => "MEM" +String #doUnparse(AList, false)
  rule #doUnparse({GET AList }, false) => "GET" +String #doUnparse(AList, false)
  rule #doUnparse({UPDATE AList }, false) => "UPDATE" +String #doUnparse(AList, false)
  rule #doUnparse({IF AList B1 B2}, false) => "IF" +String #doUnparse(AList, false)
  rule #doUnparse({LOOP AList B}, false) => "LOOP" +String #doUnparse(AList, false)
  rule #doUnparse({LOOP_LEFT AList B}, false) => "LOOP_LEFT" +String #doUnparse(AList, false)
  rule #doUnparse({LAMBDA AList T1 T2 B}, false) => "LAMBDA" +String #doUnparse(AList, false)
  rule #doUnparse({EXEC AList }, false) => "EXEC" +String #doUnparse(AList, false)
  rule #doUnparse({APPLY AList }, false) => "APPLY" +String #doUnparse(AList, false)
  rule #doUnparse({DIP AList B}, false) => "DIP" +String #doUnparse(AList, false)
  rule #doUnparse({DIP AList I B}, false) => "DIP" +String #doUnparse(AList, false)
  rule #doUnparse({FAILWITH AList }, false) => "FAILWITH" +String #doUnparse(AList, false)
  rule #doUnparse({CAST AList }, false) => "CAST" +String #doUnparse(AList, false)
  rule #doUnparse({RENAME AList }, false) => "RENAME" +String #doUnparse(AList, false)
  rule #doUnparse({CONCAT AList }, false) => "CONCAT" +String #doUnparse(AList, false)
  rule #doUnparse({SLICE AList }, false) => "SLICE" +String #doUnparse(AList, false)
  rule #doUnparse({PACK AList }, false) => "PACK" +String #doUnparse(AList, false)
  rule #doUnparse({UNPACK AList T}, false) => "UNPACK" +String #doUnparse(AList, false)
  rule #doUnparse({ADD AList }, false) => "ADD" +String #doUnparse(AList, false)
  rule #doUnparse({SUB AList }, false) => "SUB" +String #doUnparse(AList, false)
  rule #doUnparse({MUL AList }, false) => "MUL" +String #doUnparse(AList, false)
  rule #doUnparse({EDIV AList }, false) => "EDIV" +String #doUnparse(AList, false)
  rule #doUnparse({ABS AList }, false) => "ABS" +String #doUnparse(AList, false)
  rule #doUnparse({ISNAT AList }, false) => "ISNAT" +String #doUnparse(AList, false)
  rule #doUnparse({INT AList }, false) => "INT" +String #doUnparse(AList, false)
  rule #doUnparse({NEG AList }, false) => "NEG" +String #doUnparse(AList, false)
  rule #doUnparse({LSL AList }, false) => "LSL" +String #doUnparse(AList, false)
  rule #doUnparse({LSR AList }, false) => "LSR" +String #doUnparse(AList, false)
  rule #doUnparse({OR AList }, false) => "OR" +String #doUnparse(AList, false)
  rule #doUnparse({AND AList }, false) => "AND" +String #doUnparse(AList, false)
  rule #doUnparse({XOR AList }, false) => "XOR" +String #doUnparse(AList, false)
  rule #doUnparse({NOT AList }, false) => "NOT" +String #doUnparse(AList, false)
  rule #doUnparse({COMPARE AList }, false) => "COMPARE" +String #doUnparse(AList, false)
  rule #doUnparse({EQ AList }, false) => "EQ" +String #doUnparse(AList, false)
  rule #doUnparse({NEQ AList }, false) => "NEQ" +String #doUnparse(AList, false)
  rule #doUnparse({LT AList }, false) => "LT" +String #doUnparse(AList, false)
  rule #doUnparse({GT AList }, false) => "GT" +String #doUnparse(AList, false)
  rule #doUnparse({LE AList }, false) => "LE" +String #doUnparse(AList, false)
  rule #doUnparse({GE AList }, false) => "GE" +String #doUnparse(AList, false)
  rule #doUnparse({SELF AList  }, false) => "SELF" +String #doUnparse(AList, false)
  rule #doUnparse({CONTRACT AList T}, false) => "CONTRACT" +String #doUnparse(AList, false)
  rule #doUnparse({TRANSFER_TOKENS AList }, false) => "TRANSFER_TOKENS" +String #doUnparse(AList, false)
  rule #doUnparse({SET_DELEGATE AList }, false) => "SET_DELEGATE" +String #doUnparse(AList, false)
  rule #doUnparse({CREATE_ACCOUNT AList }, false) => "CREATE_ACCOUNT" +String #doUnparse(AList, false)
  rule #doUnparse({IMPLICIT_ACCOUNT AList }, false) => "IMPLICIT_ACCOUNT" +String #doUnparse(AList, false)
  rule #doUnparse({NOW AList }, false) => "NOW" +String #doUnparse(AList, false)
  rule #doUnparse({CHAIN_ID AList }, false) => "CHAIN_ID" +String #doUnparse(AList, false)
  rule #doUnparse({AMOUNT AList }, false) => "AMOUNT" +String #doUnparse(AList, false)
  rule #doUnparse({BALANCE AList }, false) => "BALANCE" +String #doUnparse(AList, false)
  rule #doUnparse({CHECK_SIGNATURE AList }, false) => "CHECK_SIGNATURE" +String #doUnparse(AList, false)
  rule #doUnparse({BLAKE2B AList }, false) => "BLAKE" +String #doUnparse(AList, false)
  rule #doUnparse({SHA256 AList }, false) => "SHA" +String #doUnparse(AList, false)
  rule #doUnparse({SHA512 AList }, false) => "SHA" +String #doUnparse(AList, false)
  rule #doUnparse({HASH_KEY AList }, false) => "HASH_KEY" +String #doUnparse(AList, false)
  rule #doUnparse({STEPS_TO_QUOTA AList }, false) => "STEPS_TO_QUOTA" +String #doUnparse(AList, false)
  rule #doUnparse({SOURCE AList }, false) => "SOURCE" +String #doUnparse(AList, false)
  rule #doUnparse({SENDER AList }, false) => "SENDER" +String #doUnparse(AList, false)
  rule #doUnparse({ADDRESS AList }, false) => "ADDRESS" +String #doUnparse(AList, false)
  rule #doUnparse({CMPEQ AList }, false) => "CMPEQ" +String #doUnparse(AList, false)
  rule #doUnparse({CMPNEQ AList }, false) => "CMPNEQ" +String #doUnparse(AList, false)
  rule #doUnparse({CMPLT AList }, false) => "CMPLT" +String #doUnparse(AList, false)
  rule #doUnparse({CMPGT AList }, false) => "CMPGT" +String #doUnparse(AList, false)
  rule #doUnparse({CMPLE AList }, false) => "CMPLE" +String #doUnparse(AList, false)
  rule #doUnparse({CMPGE AList }, false) => "CMPGE" +String #doUnparse(AList, false)
  rule #doUnparse({IFEQ AList B1 B2}, false) => "IFEQ" +String #doUnparse(AList, false)
  rule #doUnparse({IFNEQ AList B1 B2}, false) => "IFNEQ" +String #doUnparse(AList, false)
  rule #doUnparse({IFLT AList B1 B2}, false) => "IFLT" +String #doUnparse(AList, false)
  rule #doUnparse({IFGT AList B1 B2}, false) => "IFGT" +String #doUnparse(AList, false)
  rule #doUnparse({IFLE AList B1 B2}, false) => "IFLE" +String #doUnparse(AList, false)
  rule #doUnparse({IFGE AList B1 B2}, false) => "IFGE" +String #doUnparse(AList, false)
  rule #doUnparse({IFCMPEQ AList B1 B2}, false) => "IFCMPEQ" +String #doUnparse(AList, false)
  rule #doUnparse({IFCMPNEQ AList B1 B2}, false) => "IFCMPNEQ" +String #doUnparse(AList, false)
  rule #doUnparse({IFCMPLT AList B1 B2}, false) => "IFCMPLT" +String #doUnparse(AList, false)
  rule #doUnparse({IFCMPGT AList B1 B2}, false) => "IFCMPGT" +String #doUnparse(AList, false)
  rule #doUnparse({IFCMPLE AList B1 B2}, false) => "IFCMPLE" +String #doUnparse(AList, false)
  rule #doUnparse({IFCMPGE AList B1 B2}, false) => "IFCMPGE" +String #doUnparse(AList, false)
  rule #doUnparse({FAIL AList }, false) => "FAIL" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT AList }, false) => "ASSERT" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_EQ AList }, false) => "ASSERT_EQ" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_NEQ AList }, false) => "ASSERT_NEQ" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_LT AList }, false) => "ASSERT_LT" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_LE AList }, false) => "ASSERT_LE" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_GT AList }, false) => "ASSERT_GT" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_GE AList }, false) => "ASSERT_GE" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_CMPEQ AList }, false) => "ASSERT_CMPEQ" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_CMPNEQ AList }, false) => "ASSERT_CMPNEQ" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_CMPLT AList }, false) => "ASSERT_CMPLT" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_CMPLE AList }, false) => "ASSERT_CMPLE" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_CMPGT AList }, false) => "ASSERT_CMPGT" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_CMPGE AList }, false) => "ASSERT_CMPGE" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_NONE AList }, false) => "ASSERT_NONE" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_SOME AList }, false) => "ASSERT_SOME" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_LEFT AList }, false) => "ASSERT_LEFT" +String #doUnparse(AList, false)
  rule #doUnparse({ASSERT_RIGHT AList }, false) => "ASSERT_RIGHT" +String #doUnparse(AList, false)
  rule #doUnparse({IF_SOME AList B1 B2}, false) => "IF_SOME" +String #doUnparse(AList, false)
  rule #doUnparse({SET_CAR AList }, false) => "SET_CAR" +String #doUnparse(AList, false)
  rule #doUnparse({SET_CDR AList }, false) => "SET_CDR" +String #doUnparse(AList, false)
  rule #doUnparse({CREATE_CONTRACT AList CBlock  }, false) => "CREATE_CONTRACT" +String #doUnparse(AList, false)
